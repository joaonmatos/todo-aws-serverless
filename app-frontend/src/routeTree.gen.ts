/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthSigninImport } from './routes/auth/signin'
import { Route as AuthRedirectImport } from './routes/auth/redirect'
import { Route as AuthLogoutImport } from './routes/auth/logout'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthSigninRoute = AuthSigninImport.update({
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthRedirectRoute = AuthRedirectImport.update({
  path: '/auth/redirect',
  getParentRoute: () => rootRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  path: '/auth/logout',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/redirect': {
      id: '/auth/redirect'
      path: '/auth/redirect'
      fullPath: '/auth/redirect'
      preLoaderRoute: typeof AuthRedirectImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AuthenticatedRoute
  '/about': typeof AboutLazyRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/redirect': typeof AuthRedirectRoute
  '/auth/signin': typeof AuthSigninRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AuthenticatedRoute
  '/about': typeof AboutLazyRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/redirect': typeof AuthRedirectRoute
  '/auth/signin': typeof AuthSigninRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_authenticated': typeof AuthenticatedRoute
  '/about': typeof AboutLazyRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/redirect': typeof AuthRedirectRoute
  '/auth/signin': typeof AuthSigninRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/auth/logout'
    | '/auth/redirect'
    | '/auth/signin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/about' | '/auth/logout' | '/auth/redirect' | '/auth/signin'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/auth/logout'
    | '/auth/redirect'
    | '/auth/signin'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthenticatedRoute: typeof AuthenticatedRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthRedirectRoute: typeof AuthRedirectRoute
  AuthSigninRoute: typeof AuthSigninRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthenticatedRoute: AuthenticatedRoute,
  AboutLazyRoute: AboutLazyRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthRedirectRoute: AuthRedirectRoute,
  AuthSigninRoute: AuthSigninRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/auth/logout",
        "/auth/redirect",
        "/auth/signin"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/auth/logout": {
      "filePath": "auth/logout.tsx"
    },
    "/auth/redirect": {
      "filePath": "auth/redirect.tsx"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
